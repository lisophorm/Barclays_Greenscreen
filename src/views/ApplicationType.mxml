<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		remove="exit(event)" creationComplete="created(event)" 
		xmlns:components="views.components.*" 
		currentState="paths" xmlns:calibrator="views.components.calibrator.*"
		>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.core.Window;
			import mx.events.FlexEvent;
			
			import events.ApplicationEvent;
			import events.CameraSelectionEvent;
			import events.ViewEvent;
			
			import model.Settings;
			
			
			[Bindable]
			public var data:Object;
			
			public function created(event:FlexEvent=null):void
			{
				init();
				this.addEventListener( Event.INIT, init);
			}
			public function init(event:Event=null):void
			{
				trace("*************Applicationtype");

				this.currentState="paths";
				if (this.parentApplication.data!=null)
				{
					stage.displayState=StageDisplayState.NORMAL;
					NativeApplication.nativeApplication.activeWindow.alwaysInFront=false;
					data = this.parentApplication.data;
					this.server.text = data.xml.serverIP;
					this.localserver.text = data.xml.localIP;
					this.urnLength.text = data.xml.urnLength;
					this.scoreFormat.text = data.xml.scoreFormat;
					this.photoshop.text = data.xml.photoshop;
					this.calibrator.text = data.xml.calibrator;
					this.radioGroup.selectedValue = data.xml.applicationtype;
				}
			}
			
			protected function exit(event:Event=null):void
			{
				trace("*** EXIT APPLICATIONTYPE ***");
				stage.displayState=StageDisplayState.FULL_SCREEN_INTERACTIVE;
				NativeApplication.nativeApplication.activeWindow.alwaysInFront=true;
			}
			
			protected function submit(e:MouseEvent):void
			{
				this.parentApplication.dispatchEvent( new ApplicationEvent( ApplicationEvent.SAVE_TYPE, { serverIP: server.text.toString(),
					localIP:localserver.text.toString(),
					urnLength: urnLength.text.toString(), 
					applicationtype: radioGroup.selectedValue.toString(),
					scoreFormat: scoreFormat.text.toString(),
					photoshop: photoshop.text.toString(),
					calibrator: calibrator.text.toString()} ) );			
			}
			
			protected function selectCamera(event : MouseEvent):void
			{
				var cameraNames : Array = Camera.names;
				var cameraNamesList : ArrayList = new ArrayList(cameraNames);
				cameraList.dataProvider = cameraNamesList;
				cameraList.visible = true;
			}
			
			protected function cameraSelectedHandler(event : CameraSelectionEvent):void
			{
				Settings.cameraID = event.cameraID;
				cameraList.visible = false;
			}
			
			protected function cancel(e:MouseEvent):void
			{
				
				this.parentApplication.dispatchEvent( new ViewEvent(ViewEvent.LOCATION_RESTART ));
			}
			
			protected function forceLogout(e:MouseEvent):void
			{
				this.parentApplication.dispatchEvent( new ViewEvent(ViewEvent.LOCATION_FACEBOOK_FORCELOGOUT ));
			}
			

			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->						
		<s:RadioButtonGroup id="radioGroup" />
	</fx:Declarations>
	
	<s:states>
		<s:State name="paths"/>
		<s:State name="calibrator" />
	</s:states>
	
	<s:VGroup horizontalAlign="left" verticalAlign="middle" width="1180" height="100%" includeIn="paths">
		
			<s:FormHeading label="CONFIGURATION DETAILS:" />
			<s:Scroller width="100%" height="500" verticalScrollPolicy="auto" horizontalScrollPolicy="off">
				<s:Group height="500" width="100%" textAlign="left">	
				<s:VGroup>
					
				<s:Form id="configform" width="100%" height="100%">		
						
						<s:FormItem width="365" label="Remote Server url:" fontFamily="Arial">
							<s:TextInput id="server" width="650" height="30" color="0x000000" fontFamily="Arial"/>
						</s:FormItem>
							
						<s:FormItem width="365" label="Local Server url:" fontFamily="Arial">
							<s:TextInput id="localserver" width="650" height="30" color="0x000000" fontFamily="Arial"/>
						</s:FormItem>
						
						<s:FormItem width="365" label="Photoshop location:" fontFamily="Arial">				
							<s:TextInput id="photoshop" width="650" height="30" color="0x000000" fontFamily="Arial"/>
						</s:FormItem>
						
						<s:FormItem width="365" label="Calibrator location (watchfolder):" fontFamily="Arial">
							<s:TextInput id="calibrator" width="650" height="30" color="0x000000" fontFamily="Arial"/>
						</s:FormItem>
					
						<s:HGroup visible="false" includeInLayout="false">

							<s:FormItem width="365" label="URN Length:" >
									<s:TextInput id="urnLength" width="150" color="0x000000"  height="30" fontFamily="Arial"/>
							</s:FormItem>
							<s:FormItem width="365" label="Score format:" >
								<s:TextInput id="scoreFormat" width="150" color="0x000000"  height="30" fontFamily="Arial"/>
							</s:FormItem>

						</s:HGroup>
			
						<!--
						<s:FormItem width="365" label="Facebook appID:" >
							<s:TextInput id="facebookAPI_ID" width="650" color="0x000000" height="30" fontFamily="Arial"/>
						</s:FormItem> -->
			
						<s:FormItem width="365" label="Application:">
							<s:VGroup width="628">
							
									<s:RadioButton width="500" label="Registration Only" value="registration" group="{radioGroup}" skinClass="skins.vodafoneRadioButton" />
									<s:RadioButton width="500" label="Photocapture" value="photocapture" group="{radioGroup}" skinClass="skins.vodafoneRadioButton" />
									<s:RadioButton width="500" label="Simulator" value="simulator" group="{radioGroup}" skinClass="skins.vodafoneRadioButton" />
									<!--<s:RadioButton width="500" label="Green screen - Sit In" value="greenscreen" group="{radioGroup}" skinClass="skins.vodafoneRadioButton" />
									<s:RadioButton width="500" label="Green screen - Celebrate" value="greenscreen_celebrate" group="{radioGroup}" skinClass="skins.vodafoneRadioButton" />
									<s:RadioButton width="500" label="Helmet" value="helmet" group="{radioGroup}" skinClass="skins.vodafoneRadioButton" />-->
							</s:VGroup>
						
						</s:FormItem>
						
					</s:Form>	
					<s:HGroup>
						<s:Button label="Choose Webcam" skinClass="skins.vodafoneButton" click="selectCamera(event)"/>
						<s:Spacer width="20"/>
						<s:Button label="Calibrator" skinClass="skins.vodafoneButton" click="{this.currentState='calibrator'}"/>
						<s:Spacer width="20"/>
					</s:HGroup>

				</s:VGroup>
				</s:Group>
			</s:Scroller>
				
		<s:HGroup verticalAlign="middle">
			<s:Button  label="Cancel" click="cancel(event)"  skinClass="skins.vodafoneButton"/>
			<s:Spacer y="8" width="200" height="24"/>
			<s:Button id="submitButton" label="Submit" click="submit(event)"  skinClass="skins.vodafoneButton" />
			<!--s:Button label="Force Logout Facebook" click="forceLogout(event)" /-->

		</s:HGroup>
		
	</s:VGroup>
	
	<calibrator:CalibratorView id="calibratorView" includeIn="calibrator" width="1600" height="1000"/>
	
	<components:CameraSelectionPanel id="cameraList" visible="false" itemRenderer="views.renderer.CameraSelectionItemRenderer"
									 x="{width/2 - cameraList.width/2}" y="{height/2 - cameraList.height/2}"
									 camera_selected="{cameraSelectedHandler(event)}"/>
</s:Group>
