<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		remove="exit(event)" creationComplete="created(event)" 
		>
	<fx:Script>
		<![CDATA[
			import com.alfo.utils.VirtualKeyboard;
			import com.utils.Console;
			
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			import events.KioskError;
			import events.KioskEvent;
			import events.UserEvent;
			import events.ViewEvent;
			
			import model.ML;
			
			[Bindable]
			protected var validatorArr:Array;
			
			[Bindable]
			public var data:Object;
			
			
			protected var currentURN:String;
			public var optin_marketing:Boolean;
			public var optin_terms:Boolean;
			private var virtualKeyboard:VirtualKeyboard;
			
			public function created(event:FlexEvent=null):void
			{
				this.addEventListener( Event.INIT, init);
			}
			public function init(event:Event=null):void
			{
				Console.log("*** INIT USERFORM ***", this);
				clearData();
				if (this.parentApplication.data!=null)
				{
					this.userFirstName.setFocus();
					data = this.parentApplication.data;
					this.currentURN = data.urn;
					optin_marketing = data.optin_marketing;
					optin_terms = data.optin_terms;
					Console.log("CURRENT URN: "+this.currentURN, this);

				} else
				{				
					Console.log("NO CURRENT URN", this);
				}
				validatorArr = new Array();
				validatorArr.push(validateName);
				validatorArr.push(validateSurname);
				validatorArr.push(validateEmail);
				validatorArr.push(validateMobile);
				saveData.url = (this.parentApplication).localURL+'register.php';
				
				//virtualKeyboard = new VirtualKeyboard();
				//virtualKeyboard.slideUp("C:\\Program Files (x86)\\Chessware\\Touch-It");
			}
			protected function clearData():void
			{
				userFirstName.text = ""; 
				userLastName.text = ""; 
				userMobile.text = "";
				userEmail.text = ""; 
								
			}
			protected function exit(event:Event=null):void
			{
				trace("*** INIT USERFORM ***");

			}

			protected function submit(event:MouseEvent):void 
			{
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) 
				{
					//send data
					saveData.send({urn: this.currentURN, 

						firstname:userFirstName.text, 
						lastname: userLastName.text, 
						mobile:userMobile.text,
						email: userEmail.text, 
						optInTerms: optin_terms ? 1 : 0, 
						optInMarketing: optin_marketing ? 1 : 0 });
				//	save();
				} 
			}
			
			
			protected function clearForm():void
			{
				userEmail.text="";
				userEmail.errorString="";
				userFirstName.text="";
				userFirstName.errorString="";
				userLastName.text="";
				userLastName.errorString="";
				userMobile.text = "";
				userMobile.errorString = "";
				
			}
			
			protected function save(e:ResultEvent=null):void
			{
				// -> Do we need to send an isRegistered? We should divide Facebook and Direct registration perhaps
				if (e.result.result=="OK")
				{
					
					this.parentApplication.dispatchEvent( new UserEvent(UserEvent.REGISTERED, "classic"));
					this.parentApplication.dispatchEvent( new ViewEvent( ViewEvent.LOCATION_SELECT_TEAM ) );
				} else
				{
					this.parentApplication.dispatchEvent(new KioskError(KioskError.ERROR, e.result.message.toString(), "COMMUNICATION ERROR"));

				}
			}
			protected function error(e:FaultEvent):void
			{
				this.parentApplication.dispatchEvent(new KioskError(KioskError.ERROR, e.fault.message.toString(), "COMMUNICATION ERROR"));

			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
		<mx:StringValidator id="validateName" 
							source="{userFirstName}"
							property="text"
							minLength="2">
		</mx:StringValidator>
		<mx:StringValidator id="validateSurname" 
							source="{userLastName}"
							property="text"
							minLength="2">
		</mx:StringValidator>
		<mx:EmailValidator id="validateEmail"
						   source="{userEmail}"
						   property="text">
		</mx:EmailValidator>
		<mx:PhoneNumberValidator id="validateMobile" minDigits="6"
						   source="{userMobile}"
						   property="text">
		</mx:PhoneNumberValidator>

		<s:HTTPService id="saveData" resultFormat="flashvars" method="POST" url="{(this.parentApplication).localURL+'register.php'}" result="save(event)" fault="error(event)" />
	</fx:Declarations>
	
	<s:Form width="100%" id="userform" horizontalCenter="105" verticalCenter="30">
		<s:layout>
			<s:FormLayout/>
		</s:layout>
		<s:FormHeading id="frontMessage" label="PLEASE ENTER YOUR DETAILS" />
		<s:Spacer height="30" />
		<s:FormItem label="First Name:" skinClass="skins.BarclaysFormItem" >				
			<s:TextInput id="userFirstName" width="500" height="54" skinClass="skins.BarclaysTextInput" />
		</s:FormItem>
		
		<s:FormItem label="Last Name:" skinClass="skins.BarclaysFormItem">
			<s:TextInput id="userLastName" width="500" height="54" skinClass="skins.BarclaysTextInput" />
		</s:FormItem>
		
		<s:FormItem label="Email address:" skinClass="skins.BarclaysFormItem">
			<s:TextInput id="userEmail" width="500" height="54" skinClass="skins.BarclaysTextInput" />
		</s:FormItem>
		
		<s:FormItem label="Mobile Number:"  skinClass="skins.BarclaysFormItem">
			<s:TextInput id="userMobile" width="500" height="54" skinClass="skins.BarclaysTextInput" />
		</s:FormItem>
	
	<s:HGroup width="100%" horizontalAlign="center">
		
		<s:Button label="CANCEL" click="clearForm()" skinClass="skins.barclaysButton"/>
		<s:Spacer width="50" />
		
		<s:Button label="SUBMIT" click="submit(event)" skinClass="skins.barclaysButton"/>
	</s:HGroup>
	
	</s:Form>
	
</s:Group>
